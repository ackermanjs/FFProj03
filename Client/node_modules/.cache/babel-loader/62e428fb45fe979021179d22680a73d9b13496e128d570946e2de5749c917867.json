{"ast":null,"code":"var _jsxFileName = \"/Users/ratnesh/projects/FFProj03/Client/src/App.js\";\nimport \"./App.css\";\n// commemted out by Austin\nimport Button from \"react-bootstrap/Button\";\n// commemted out by Austin\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TopNav from \"./components/TopNav\";\nimport Header from \"./components/Header\";\nimport HeroSection from \"./pages/HeroSection\";\nimport BodyMid from \"./pages/BodyMid\";\nimport Body from \"./pages/Body\";\nimport Footer from \"./components/Footer\";\nimport Dogs from \"./pages/Dogs\";\nimport Cats from \"./pages/Cats\";\nimport InitialLoad from \"./pages/InitialLoad\";\nimport About from \"./pages/About\";\nimport NewUser from \"./pages/NewUser\";\nimport ReturnUser from \"./pages/ReturnUser\";\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from \"react-router-dom\";\n\n// commemted out by Austin\n// import {\n// //   ApolloClient,\n// //   InMemoryCache,\n// //   ApolloProvider,\n// //   createHttpLink,\n// // } from '@apollo/client';\n// // import { setContext } from '@apollo/client/link/context';\n\n// // import Footer from './components/Footer';\n// // const httpLink = createHttpLink({\n// //   uri: '/graphql',\n// // });\n\n// // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n// // const authLink = setContext((_, { headers }) => {\n// //   // get the authentication token from local storage if it exists\n// //   const token = localStorage.getItem('id_token');\n// //   // return the headers to the context so httpLink can read them\n// //   return {\n// //     headers: {\n// //       ...headers,\n// //       authorization: token ? `Bearer ${token}` : '',\n// //     },\n// //   };\n// // });\n\n// // const client = new ApolloClient({\n// //   // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n// //   link: authLink.concat(httpLink),\n// //   cache: new InMemoryCache(),\n// // });\n// /* <ApolloProvider client={client}> */\n// /* </ApolloProvider> */\n\n// /* <HeroSection />\n// <BodyMid />\n// <Body />\n// <Footer /> */\n// //       <Dogs />\n// //       <Cats />\n// commemted out by Austin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cats\",\n        element: /*#__PURE__*/_jsxDEV(Cats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dogs\",\n        element: /*#__PURE__*/_jsxDEV(Dogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newuser\",\n        element: /*#__PURE__*/_jsxDEV(NewUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/returnuser\",\n        element: /*#__PURE__*/_jsxDEV(ReturnUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(InitialLoad, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","TopNav","Header","HeroSection","BodyMid","Body","Footer","Dogs","Cats","InitialLoad","About","NewUser","ReturnUser","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/ratnesh/projects/FFProj03/Client/src/App.js"],"sourcesContent":["import \"./App.css\";\n// commemted out by Austin\nimport Button from \"react-bootstrap/Button\"\n// commemted out by Austin\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TopNav from \"./components/TopNav\";\nimport Header from \"./components/Header\";\nimport HeroSection from \"./pages/HeroSection\";\nimport BodyMid from \"./pages/BodyMid\";\nimport Body from \"./pages/Body\";\nimport Footer from \"./components/Footer\";\nimport Dogs from \"./pages/Dogs\";\nimport Cats from \"./pages/Cats\";\nimport InitialLoad from \"./pages/InitialLoad\";\nimport About from \"./pages/About\";\nimport NewUser from \"./pages/NewUser\";\nimport ReturnUser from \"./pages/ReturnUser\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\n\n// commemted out by Austin\n // import {\n// //   ApolloClient,\n// //   InMemoryCache,\n// //   ApolloProvider,\n// //   createHttpLink,\n// // } from '@apollo/client';\n// // import { setContext } from '@apollo/client/link/context';\n\n// // import Footer from './components/Footer';\n// // const httpLink = createHttpLink({\n// //   uri: '/graphql',\n// // });\n\n// // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n// // const authLink = setContext((_, { headers }) => {\n// //   // get the authentication token from local storage if it exists\n// //   const token = localStorage.getItem('id_token');\n// //   // return the headers to the context so httpLink can read them\n// //   return {\n// //     headers: {\n// //       ...headers,\n// //       authorization: token ? `Bearer ${token}` : '',\n// //     },\n// //   };\n// // });\n\n// // const client = new ApolloClient({\n// //   // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n// //   link: authLink.concat(httpLink),\n// //   cache: new InMemoryCache(),\n// // });\n// /* <ApolloProvider client={client}> */\n// /* </ApolloProvider> */\n\n// /* <HeroSection />\n// <BodyMid />\n// <Body />\n// <Footer /> */\n// //       <Dogs />\n// //       <Cats />\n// commemted out by Austin\n      \n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/cats\" element={<Cats />} />\n        <Route path=\"/dogs\" element={<Dogs />} />\n        <Route path=\"/newuser\" element={<NewUser />} />\n        <Route path=\"/returnuser\" element={<ReturnUser />} />\n        <Route path=\"/\" element={<InitialLoad />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}