{"ast":null,"code":"var _jsxFileName = \"/Users/ratnesh/projects/FFProj03/Client/src/App.js\";\nimport \"./App.css\";\n// commemted out by Austin\nimport Button from \"react-bootstrap/Button\";\n// commemted out by Austin\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TopNav from \"./components/TopNav\";\nimport Header from \"./components/Header\";\nimport HeroSection from \"./pages/HeroSection\";\nimport BodyMid from \"./pages/BodyMid\";\nimport Body from \"./pages/Body\";\nimport Footer from \"./components/Footer\";\nimport Dogs from \"./pages/Dogs\";\nimport Cats from \"./pages/Cats\";\nimport InitialLoad from \"./pages/InitialLoad\";\nimport About from \"./pages/About\";\nimport NewUser from \"./pages/NewUser\";\nimport ReturnUser from \"./pages/ReturnUser\";\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from \"react-router-dom\";\n\n// commemted out by Austin\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n//  import Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\n//  Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  //  get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n/*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 2\n}, this);\n\n// <HeroSection />\n{/* <BodyMid /> */}\n/*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 1\n}, this);\n{/* <Footer />  */}\n/*#__PURE__*/_jsxDEV(Dogs, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 7\n}, this);\n//  <Cats />\n// commemted out by Austin\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cats\",\n        element: /*#__PURE__*/_jsxDEV(Cats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dogs\",\n        element: /*#__PURE__*/_jsxDEV(Dogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newuser\",\n        element: /*#__PURE__*/_jsxDEV(NewUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/returnuser\",\n        element: /*#__PURE__*/_jsxDEV(ReturnUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(InitialLoad, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","TopNav","Header","HeroSection","BodyMid","Body","Footer","Dogs","Cats","InitialLoad","About","NewUser","ReturnUser","BrowserRouter","Router","Routes","Route","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","_ref","headers","token","localStorage","getItem","authorization","client","link","concat","cache","fileName","_jsxFileName","lineNumber","columnNumber","App","children","path","element","_c","$RefreshReg$"],"sources":["/Users/ratnesh/projects/FFProj03/Client/src/App.js"],"sourcesContent":["import \"./App.css\";\n// commemted out by Austin\nimport Button from \"react-bootstrap/Button\"\n// commemted out by Austin\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TopNav from \"./components/TopNav\";\nimport Header from \"./components/Header\";\nimport HeroSection from \"./pages/HeroSection\";\nimport BodyMid from \"./pages/BodyMid\";\nimport Body from \"./pages/Body\";\nimport Footer from \"./components/Footer\";\nimport Dogs from \"./pages/Dogs\";\nimport Cats from \"./pages/Cats\";\nimport InitialLoad from \"./pages/InitialLoad\";\nimport About from \"./pages/About\";\nimport NewUser from \"./pages/NewUser\";\nimport ReturnUser from \"./pages/ReturnUser\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\n\n// commemted out by Austin\n import {\n   ApolloClient,\n   InMemoryCache,\n   ApolloProvider,\n   createHttpLink,\n } from '@apollo/client';\n import { setContext } from '@apollo/client/link/context';\n\n//  import Footer from './components/Footer';\n const httpLink = createHttpLink({\n   uri: '/graphql',\n });\n\n//  Construct request middleware that will attach the JWT token to every request as an `authorization` header\n const authLink = setContext((_, { headers }) => {\n  //  get the authentication token from local storage if it exists\n   const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n   return {\n     headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n   },\n  };\n });\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n });\n <ApolloProvider client={client}> \n</ApolloProvider> \n\n  // <HeroSection />\n{/* <BodyMid /> */}\n<Body />\n{/* <Footer />  */}\n      <Dogs />\n      //  <Cats />\n// commemted out by Austin\n      \n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/cats\" element={<Cats />} />\n        <Route path=\"/dogs\" element={<Dogs />} />\n        <Route path=\"/newuser\" element={<NewUser />} />\n        <Route path=\"/returnuser\" element={<ReturnUser />} />\n        <Route path=\"/\" element={<InitialLoad />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}